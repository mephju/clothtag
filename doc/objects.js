//this is a req object
{ domain: null,
  _events: { data: [Function], end: [Function] },
  _maxListeners: 10,
  socket: 
   { domain: null,
     _events: 
      { drain: [Function: ondrain],
        timeout: [Object],
        error: [Function],
        close: [Object] },
     _maxListeners: 10,
     _handle: 
      { writeQueueSize: 0,
        owner: [Circular],
        onread: [Function: onread] },
     _pendingWriteReqs: 0,
     _flags: 0,
     _connectQueueSize: 0,
     destroyed: false,
     errorEmitted: false,
     bytesRead: 1749,
     _bytesDispatched: 374,
     allowHalfOpen: true,
     writable: true,
     readable: true,
     server: 
      { domain: null,
        _events: [Object],
        _maxListeners: 10,
        _connections: 6,
        connections: [Getter/Setter],
        allowHalfOpen: true,
        _handle: [Object],
        httpAllowHalfOpen: false,
        _connectionKey: '4:0.0.0.0:3000' },
     _idleTimeout: 120000,
     _idleNext: 
      { domain: null,
        _events: [Object],
        _maxListeners: 10,
        _handle: [Object],
        _pendingWriteReqs: 0,
        _flags: 0,
        _connectQueueSize: 0,
        destroyed: false,
        errorEmitted: false,
        bytesRead: 580,
        _bytesDispatched: 243,
        allowHalfOpen: true,
        writable: true,
        readable: true,
        server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Circular],
        _idleStart: Wed Jan 30 2013 10:57:55 GMT+0100 (CET),
        parser: [Object],
        ondata: [Function],
        onend: [Function],
        _httpMessage: null,
        _paused: false },
     _idlePrev: 
      { _idleNext: [Circular],
        _idlePrev: [Object],
        ontimeout: [Function] },
     _idleStart: Wed Jan 30 2013 10:58:03 GMT+0100 (CET),
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _httpMessage: 
      { domain: null,
        _events: [Object],
        _maxListeners: 10,
        output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _hasBody: true,
        _trailer: '',
        finished: false,
        socket: [Circular],
        connection: [Circular],
        app: [Object],
        _headers: [Object],
        _headerNames: [Object],
        req: [Circular],
        viewCallbacks: [],
        locals: [Function: locals] },
     _paused: false },
  connection: 
   { domain: null,
     _events: 
      { drain: [Function: ondrain],
        timeout: [Object],
        error: [Function],
        close: [Object] },
     _maxListeners: 10,
     _handle: 
      { writeQueueSize: 0,
        owner: [Circular],
        onread: [Function: onread] },
     _pendingWriteReqs: 0,
     _flags: 0,
     _connectQueueSize: 0,
     destroyed: false,
     errorEmitted: false,
     bytesRead: 1749,
     _bytesDispatched: 374,
     allowHalfOpen: true,
     writable: true,
     readable: true,
     server: 
      { domain: null,
        _events: [Object],
        _maxListeners: 10,
        _connections: 6,
        connections: [Getter/Setter],
        allowHalfOpen: true,
        _handle: [Object],
        httpAllowHalfOpen: false,
        _connectionKey: '4:0.0.0.0:3000' },
     _idleTimeout: 120000,
     _idleNext: 
      { domain: null,
        _events: [Object],
        _maxListeners: 10,
        _handle: [Object],
        _pendingWriteReqs: 0,
        _flags: 0,
        _connectQueueSize: 0,
        destroyed: false,
        errorEmitted: false,
        bytesRead: 580,
        _bytesDispatched: 243,
        allowHalfOpen: true,
        writable: true,
        readable: true,
        server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Circular],
        _idleStart: Wed Jan 30 2013 10:57:55 GMT+0100 (CET),
        parser: [Object],
        ondata: [Function],
        onend: [Function],
        _httpMessage: null,
        _paused: false },
     _idlePrev: 
      { _idleNext: [Circular],
        _idlePrev: [Object],
        ontimeout: [Function] },
     _idleStart: Wed Jan 30 2013 10:58:03 GMT+0100 (CET),
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _httpMessage: 
      { domain: null,
        _events: [Object],
        _maxListeners: 10,
        output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _hasBody: true,
        _trailer: '',
        finished: false,
        socket: [Circular],
        connection: [Circular],
        app: [Object],
        _headers: [Object],
        _headerNames: [Object],
        req: [Circular],
        viewCallbacks: [],
        locals: [Function: locals] },
     _paused: false },
  httpVersion: '1.1',
  complete: true,
  headers: 
   { host: 'localhost:3000',
     connection: 'keep-alive',
     'content-length': '43',
     accept: 'application/json, text/javascript, */*; q=0.01',
     origin: 'http://localhost:3000',
     'x-requested-with': 'XMLHttpRequest',
     'user-agent': 'Mozilla/5.0 (X11; Linux i686) AppleWebKit/537.17 (KHTML, like Gecko) Chrome/24.0.1312.56 Safari/537.17',
     'content-type': 'application/x-www-form-urlencoded; charset=UTF-8',
     referer: 'http://localhost:3000/images/cd231d0488d9f5c60b9a5b4dff07abce.jpg?link=afafsdafdasdfads&title=adsfadfadfsadsf',
     'accept-encoding': 'gzip,deflate,sdch',
     'accept-language': 'en-US,en;q=0.8',
     'accept-charset': 'ISO-8859-1,utf-8;q=0.7,*;q=0.3',
     cookie: 'session0|session_id=%22d862cf1707bf4ceda37e4af1152dfc4c%22' },
  trailers: {},
  readable: false,
  _paused: false,
  _pendings: [],
  _endEmitted: false,
  url: '/images/cd231d0488d9f5c60b9a5b4dff07abce.jpg/tag',
  method: 'POST',
  statusCode: null,
  client: 
   { domain: null,
     _events: 
      { drain: [Function: ondrain],
        timeout: [Object],
        error: [Function],
        close: [Object] },
     _maxListeners: 10,
     _handle: 
      { writeQueueSize: 0,
        owner: [Circular],
        onread: [Function: onread] },
     _pendingWriteReqs: 0,
     _flags: 0,
     _connectQueueSize: 0,
     destroyed: false,
     errorEmitted: false,
     bytesRead: 1749,
     _bytesDispatched: 374,
     allowHalfOpen: true,
     writable: true,
     readable: true,
     server: 
      { domain: null,
        _events: [Object],
        _maxListeners: 10,
        _connections: 6,
        connections: [Getter/Setter],
        allowHalfOpen: true,
        _handle: [Object],
        httpAllowHalfOpen: false,
        _connectionKey: '4:0.0.0.0:3000' },
     _idleTimeout: 120000,
     _idleNext: 
      { domain: null,
        _events: [Object],
        _maxListeners: 10,
        _handle: [Object],
        _pendingWriteReqs: 0,
        _flags: 0,
        _connectQueueSize: 0,
        destroyed: false,
        errorEmitted: false,
        bytesRead: 580,
        _bytesDispatched: 243,
        allowHalfOpen: true,
        writable: true,
        readable: true,
        server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Circular],
        _idleStart: Wed Jan 30 2013 10:57:55 GMT+0100 (CET),
        parser: [Object],
        ondata: [Function],
        onend: [Function],
        _httpMessage: null,
        _paused: false },
     _idlePrev: 
      { _idleNext: [Circular],
        _idlePrev: [Object],
        ontimeout: [Function] },
     _idleStart: Wed Jan 30 2013 10:58:03 GMT+0100 (CET),
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     onend: [Function],
     _httpMessage: 
      { domain: null,
        _events: [Object],
        _maxListeners: 10,
        output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _hasBody: true,
        _trailer: '',
        finished: false,
        socket: [Circular],
        connection: [Circular],
        app: [Object],
        _headers: [Object],
        _headerNames: [Object],
        req: [Circular],
        viewCallbacks: [],
        locals: [Function: locals] },
     _paused: false },
  httpVersionMajor: 1,
  httpVersionMinor: 1,
  upgrade: false,
  originalUrl: '/images/cd231d0488d9f5c60b9a5b4dff07abce.jpg/tag',
  _parsedUrl: 
   { pathname: '/images/cd231d0488d9f5c60b9a5b4dff07abce.jpg/tag',
     path: '/images/cd231d0488d9f5c60b9a5b4dff07abce.jpg/tag',
     href: '/images/cd231d0488d9f5c60b9a5b4dff07abce.jpg/tag' },
  query: {},
  app: 
   { [Function: app]
     use: [Function],
     handle: [Function],
     listen: [Function],
     setMaxListeners: [Function],
     emit: [Function],
     addListener: [Function],
     on: [Function],
     once: [Function],
     removeListener: [Function],
     removeAllListeners: [Function],
     listeners: [Function],
     route: '/',
     stack: [ [Object], [Object], [Object], [Object], [Object], [Object] ],
     init: [Function],
     defaultConfiguration: [Function],
     engine: [Function],
     param: [Function],
     set: [Function],
     path: [Function],
     enabled: [Function],
     disabled: [Function],
     enable: [Function],
     disable: [Function],
     configure: [Function],
     get: [Function],
     post: [Function],
     put: [Function],
     head: [Function],
     delete: [Function],
     options: [Function],
     trace: [Function],
     copy: [Function],
     lock: [Function],
     mkcol: [Function],
     move: [Function],
     propfind: [Function],
     proppatch: [Function],
     unlock: [Function],
     report: [Function],
     mkactivity: [Function],
     checkout: [Function],
     merge: [Function],
     'm-search': [Function],
     notify: [Function],
     subscribe: [Function],
     unsubscribe: [Function],
     patch: [Function],
     all: [Function],
     del: [Function],
     render: [Function],
     request: {},
     response: {},
     cache: {},
     settings: 
      { 'x-powered-by': true,
        env: 'development',
        views: '/home/mephju/Dropbox/projects/clothtag/server/js/../views',
        'jsonp callback name': 'callback',
        'json spaces': 2,
        'view engine': 'jade',
        'view options': [Object] },
     engines: { '.jade': [Function] },
     viewCallbacks: [],
     _events: { mount: [Function] },
     _router: 
      { map: [Object],
        params: {},
        _params: [],
        caseSensitive: false,
        strict: false,
        middleware: [Function: router] },
     routes: { get: [Object], post: [Object] },
     router: [Getter],
     locals: { [Function: locals] settings: [Object], pretty: true },
     _usedRouter: true },
  res: 
   { domain: null,
     _events: { finish: [Function] },
     _maxListeners: 10,
     output: [],
     outputEncodings: [],
     writable: true,
     _last: false,
     chunkedEncoding: false,
     shouldKeepAlive: true,
     useChunkedEncodingByDefault: true,
     sendDate: true,
     _hasBody: true,
     _trailer: '',
     finished: false,
     socket: 
      { domain: null,
        _events: [Object],
        _maxListeners: 10,
        _handle: [Object],
        _pendingWriteReqs: 0,
        _flags: 0,
        _connectQueueSize: 0,
        destroyed: false,
        errorEmitted: false,
        bytesRead: 1749,
        _bytesDispatched: 374,
        allowHalfOpen: true,
        writable: true,
        readable: true,
        server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Object],
        _idleStart: Wed Jan 30 2013 10:58:03 GMT+0100 (CET),
        parser: [Object],
        ondata: [Function],
        onend: [Function],
        _httpMessage: [Circular],
        _paused: false },
     connection: 
      { domain: null,
        _events: [Object],
        _maxListeners: 10,
        _handle: [Object],
        _pendingWriteReqs: 0,
        _flags: 0,
        _connectQueueSize: 0,
        destroyed: false,
        errorEmitted: false,
        bytesRead: 1749,
        _bytesDispatched: 374,
        allowHalfOpen: true,
        writable: true,
        readable: true,
        server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Object],
        _idleStart: Wed Jan 30 2013 10:58:03 GMT+0100 (CET),
        parser: [Object],
        ondata: [Function],
        onend: [Function],
        _httpMessage: [Circular],
        _paused: false },
     app: 
      { [Function: app]
        use: [Function],
        handle: [Function],
        listen: [Function],
        setMaxListeners: [Function],
        emit: [Function],
        addListener: [Function],
        on: [Function],
        once: [Function],
        removeListener: [Function],
        removeAllListeners: [Function],
        listeners: [Function],
        route: '/',
        stack: [Object],
        init: [Function],
        defaultConfiguration: [Function],
        engine: [Function],
        param: [Function],
        set: [Function],
        path: [Function],
        enabled: [Function],
        disabled: [Function],
        enable: [Function],
        disable: [Function],
        configure: [Function],
        get: [Function],
        post: [Function],
        put: [Function],
        head: [Function],
        delete: [Function],
        options: [Function],
        trace: [Function],
        copy: [Function],
        lock: [Function],
        mkcol: [Function],
        move: [Function],
        propfind: [Function],
        proppatch: [Function],
        unlock: [Function],
        report: [Function],
        mkactivity: [Function],
        checkout: [Function],
        merge: [Function],
        'm-search': [Function],
        notify: [Function],
        subscribe: [Function],
        unsubscribe: [Function],
        patch: [Function],
        all: [Function],
        del: [Function],
        render: [Function],
        request: {},
        response: {},
        cache: {},
        settings: [Object],
        engines: [Object],
        viewCallbacks: [],
        _events: [Object],
        _router: [Object],
        routes: [Object],
        router: [Getter],
        locals: [Object],
        _usedRouter: true },
     _headers: { 'x-powered-by': 'Express' },
     _headerNames: { 'x-powered-by': 'X-Powered-By' },
     req: [Circular],
     viewCallbacks: [],
     locals: [Function: locals] },
  next: [Function: next],
  body: { link: 'sfdgsfsfg', title: 'fdsgsfdfsgs', x: '50', y: '306' },
  _body: true,
  _decoder: 
   { encoding: 'utf8',
     surrogateSize: 3,
     charBuffer: <Buffer 20 20 20 0a 20 20>,
     charReceived: 0,
     charLength: 0 },
  _route_index: 0,
  route: 
   { path: '/images/:id/tag',
     method: 'post',
     callbacks: [ [Function] ],
     keys: [ [Object] ],
     regexp: /^\/images\/(?:([^\/]+?))\/tag\/?$/i,
     params: [ id: 'cd231d0488d9f5c60b9a5b4dff07abce.jpg' ] },
  params: [ id: 'cd231d0488d9f5c60b9a5b4dff07abce.jpg' ] }

